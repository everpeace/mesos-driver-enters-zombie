#!/bin/bash
set -o errexit -o pipefail

declare -a java_args
declare -a app_args
FRAMEWORK_HOME=`dirname $0`/..

if [ -z ${MESOS_NATIVE_LIBRARY+x} ]
then
  search_paths='/usr/lib /usr/local/lib'
  echo "MESOS_NATIVE_LIBRARY is not set. Searching in $search_paths."
  export MESOS_NATIVE_LIBRARY=$(find -L $search_paths -name libmesos.dylib -or -name libmesos.so 2>/dev/null | head -n1)
fi

echo "MESOS_NATIVE_LIBRARY is set to $MESOS_NATIVE_LIBRARY"

addJava () {
  	java_args=( "${java_args[@]}" "$1" )
}
addApplication () {
	app_args=( "${app_args[@]}" "$1" )
}
addDebugger () {
  addJava "-Xdebug"
  addJava "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=$1"
}
die() {
  echo "Aborting: $@"
  exit 1
}

require_arg () {
	local type="$1"
	local opt="$2"
	local arg="$3"

	if [[ -z "$arg" ]] || [[ "${arg:0:1}" == "-" ]]; then
		die "$opt requires <$type> argument"
	fi
}

while [[ $# -gt 0 ]]; do
	case "$1" in
		-D*) addJava "$1" && shift ;;
		--jvm-debug) require_arg port "$1" "$2"; addDebugger "$2" && shift 2;;
 		  *) addApplication "$1" && shift ;;
	esac
done


# Start the scheduler
java "${java_args[@]}" -cp "$FRAMEWORK_HOME"/target/mesos-driver-*.jar mesos_driver_check.Main "${app_args[@]}"
